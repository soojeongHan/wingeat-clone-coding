{"version":3,"sources":["components/header/Header.js","service/ShoppingService.js","redux/modules/shopping.js","container/HeaderContainer.js","components/list/List.js","container/ListContainer.js","components/feature/Feature.js","container/FeatureContainer.js","pages/HomePage.js","components/cart/Cart.js","container/CartContainer.js","pages/CartPage.js","redux/modules/rootReducer.js","redux/modules/rootSaga.js","redux/create.js","App.js","reportWebVitals.js","index.js"],"names":["cn","classNames","bind","styles","Header","countProductCart","handleMovePage","className","onClick","src","alt","ShoppingService","Axios","get","data","pageNumber","sagas","getListSaga","getFeatureSaga","createActions","SUCCESS_LIST","list","SUCCESS_FEATURE","feature","COUNTING_CART","length","successList","successFeature","countingCart","pending","fail","reducer","handleActions","state","action","loading","concat","payload","countCart","PENDING","error","FAIL","GET_LIST","getList","getFeature","takeEvery","put","call","HeaderContainer","dispatch","useDispatch","useSelector","shopping","React","useEffect","localStorage","clickMovePage","useCallback","url","push","Item","product","clickAddingProductShoppingCart","image","itemName","price","toString","replace","List","fetchMoreRef","map","i","ref","ListContainer","copied","id","getItem","count","JSON","parse","selected","setItem","stringify","alert","useState","setPageNumber","useLayoutEffect","target","useRef","observer","current","IntersectionObserver","isIntersecting","prevPageNumber","observe","disconnect","FetchMoreList","prev","cur","next","currentFeatrue","imageUrl","Feature","isMobile","clickMoveFeatureImage","Array","fill","_","element","index","FeatureContainer","FetchFeatureData","autoPlay","setAutoPlay","isMoving","setIsMoving","setCurrentFeature","setTimeout","prevIndex","clearTimeout","setIsMobile","handleResize","timer","window","innerWidth","addEventListener","removeEventListener","SliderFeature","HomePage","Fragment","toggleProductPayment","clickRemoveProductCart","handleCountingProduct","type","checked","onChange","e","data-value","Cart","paymentPrice","CartContainer","setData","setPaymentPrice","result","Object","keys","key","item","obj","assign","reduce","sum","removeItem","filter","number","Number","dataset","value","CartPage","rootReducer","history","combineReducers","router","connectRouter","rootSaga","all","ShoppingSagas","createHashHistory","sagaMiddleware","createSagaMiddleware","create","store","createStore","applyMiddleware","routerMiddleware","run","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee1f7258.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './Header.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cn = classNames.bind(styles);\r\n\r\nconst Header = ({\r\n  countProductCart,\r\n  handleMovePage,\r\n}) => {\r\n  return (\r\n    <div className={cn('header')}>\r\n      \r\n      <div className={cn('header__top')}>\r\n        <div className={cn('header__top__cart')} onClick={() => handleMovePage(\"/cart\")}>\r\n          <div className={cn('header__top__cart__count-product')}> \r\n            {countProductCart}\r\n          </div>\r\n          <span>장바구니</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={cn('header__main')}>\r\n        <div className={cn('header__main__logo')} onClick={() => handleMovePage(\"/\")}>\r\n          <img src=\"https://image.wingeat.com/logo/images/we_logo_center.png\" alt=\"logo\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import Axios from 'axios';\r\n\r\nexport default class ShoppingService {\r\n  static async getFeature () {\r\n    const { data } = await Axios.get(\"https://node.wingeat.com/test-api/features\");\r\n    return data;\r\n  }\r\n  static async getList (pageNumber) {\r\n    const { data } = await Axios.get(`https://node.wingeat.com/test-api/items?page=${pageNumber}`);\r\n    return data;\r\n  }\r\n}","import { put, takeEvery, call } from \"@redux-saga/core/effects\";\r\nimport { createActions, handleActions } from \"redux-actions\";\r\nimport ShoppingService from '../../service/ShoppingService';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  feature: [],\r\n  loading: false,\r\n  error: null,\r\n  countCart: 0,\r\n}\r\n\r\nexport const { successList, successFeature, countingCart, pending, fail } = createActions(\r\n  {\r\n    SUCCESS_LIST: (list) => ({list}),\r\n    SUCCESS_FEATURE: (feature) => ({feature}),\r\n    COUNTING_CART: (length) => ({length}),\r\n  },\r\n  'PENDING',\r\n  'FAIL',\r\n);\r\n\r\nconst reducer = handleActions(\r\n  {\r\n    SUCCESS_LIST: (state, action) => ({\r\n      ...state,\r\n      loading: false,\r\n      list: state.list.concat(action.payload.list),\r\n    }),\r\n    SUCCESS_FEATURE: (state, action) => ({\r\n      ...state,\r\n      feature: action.payload.feature,\r\n    }),\r\n    COUNTING_CART: (state, action) => ({\r\n      ...state,\r\n      countCart: action.payload.length\r\n    }),\r\n    PENDING: (state) => ({\r\n      ...state,\r\n      loading: true,\r\n      error: null,\r\n    }),\r\n    FAIL: (state) => ({\r\n      ...state,\r\n      loading: false,\r\n      error: true,\r\n    })\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default reducer;\r\n\r\nexport const {getList, getFeature} = createActions(\r\n  {\r\n    GET_LIST: (pageNumber) => ({pageNumber})\r\n  },\r\n  \"GET_FEATURE\",\r\n)\r\n\r\nexport function* sagas() {\r\n  yield takeEvery(getList, getListSaga);\r\n  yield takeEvery(getFeature, getFeatureSaga);\r\n}\r\n\r\nfunction* getListSaga (action) {\r\n  try {\r\n    yield put(pending());\r\n    const list = yield call(ShoppingService.getList, action.payload.pageNumber);\r\n    yield put(successList(list));\r\n  } catch(e) {\r\n    yield put(fail());\r\n  }\r\n}\r\n\r\nfunction* getFeatureSaga () {\r\n  try {\r\n    const feature = yield call(ShoppingService.getFeature);\r\n    yield put(successFeature(feature));\r\n  } catch(e) {\r\n    yield put(fail());\r\n  }\r\n}\r\n\r\n\r\n","import { push } from 'connected-react-router';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Header from '../components/header/Header';\r\nimport { countingCart } from '../redux/modules/shopping';\r\n\r\nconst HeaderContainer = () => {\r\n  // TODO : local storage에서 데이터 가져와서 숫자를 카운팅하는 변수.\r\n  // list와 header 컨테이너에서 사용해서, 전역으로 상태관리를 사용해야한다. => Redux\r\n  const dispatch = useDispatch();\r\n  const countProductCart = useSelector(state => state.shopping.countCart);\r\n  React.useEffect(() => {\r\n    dispatch(countingCart(localStorage.length));\r\n  }, [countProductCart, dispatch]);\r\n  \r\n  // url에 따른 페이지 이동, 1) 로고 2) 장바구니\r\n  const clickMovePage = React.useCallback((url) => {\r\n    dispatch(push(url));\r\n  }, [dispatch]);\r\n  \r\n  return (\r\n    <Header countProductCart={countProductCart} handleMovePage={clickMovePage}/>\r\n  );\r\n}\r\n\r\nexport default HeaderContainer;","import React from 'react';\r\nimport styles from './List.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cn = classNames.bind(styles);\r\n\r\nconst Item = ({\r\n  product, clickAddingProductShoppingCart\r\n}) => {\r\n  const { image, itemName, price } = product;\r\n  return (\r\n  <div className={cn(`product`)}>\r\n    <div className={cn(`product-image`)} onClick={() => clickAddingProductShoppingCart(product)}>\r\n      <img src={`https://image.wingeat.com/${image}`} alt={`product-${itemName}`} />\r\n    </div>\r\n    <div className={cn(`product-name`)}>\r\n      <span>{itemName}</span>\r\n    </div>\r\n    <div className={cn(`product-price`)}>\r\n      <span>{price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}원</span>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nconst List = ({\r\n  data, loading, fetchMoreRef,\r\n  clickAddingProductShoppingCart\r\n}) => {\r\n  return (\r\n    <div className={cn('list')}>\r\n      {/* SUBJECT */}\r\n      <div className={cn('list-subject')}>\r\n        <p>윙잇 MADE</p>\r\n      </div>\r\n\r\n      {/* PRODUCT LIST */}\r\n      <div className={cn('product-list')}>\r\n        {data.map((product,i) => \r\n          <Item\r\n            key={i}\r\n            product={product}\r\n            clickAddingProductShoppingCart={clickAddingProductShoppingCart}\r\n          /> \r\n        )}\r\n      </div>\r\n      <div className={cn('fetch-more-ref')} ref={fetchMoreRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport List from '../components/list/List';\r\nimport { getList, countingCart } from '../redux/modules/shopping';\r\n\r\n/*\r\nInfitite Scroll\r\n  1) 스크롤이 맨 아래에 위치하면, 데이터를 요청한다.\r\n    - 현재 pageNum이 담긴 상태가 필요하다. -> 전역으로 관리할 필요가 없다. -> List Container에서 관리한다.\r\n    - 뷰포트 맨 끝에 도달하면, 데이터를 추가로 가져와 렌더링한다.\r\n      - How ?\r\n        1. IntersectionObserver를 사용한다.\r\n           - 브라우저 뷰포트(Viewport)와 설정한 요소(Element)의 교차점을 관찰하며, 요소가 뷰포트에 포함되는지 포함되지 않는지, 더 쉽게는 사용자 화면에   \r\n             지금 보이는 요소인지 아닌지를 구별하는 기능을 제공한다.\r\n          - 리스트를 렌더링할 때, 맨 끝에 요소를 두고, 해당 요소가 뷰포트에 보일 때, 추가 데이터를 요청한다.\r\n        2. Throttle을 사용한다.\r\n          - 이벤트를 일정한 주기마다 발생하도록 하는 기술이다.\r\n  2) 데이터를 렌더링한다.\r\n*/\r\n\r\nconst FetchMoreList = (dispatch) => {\r\n  const [pageNumber, setPageNumber] = React.useState(1);\r\n\r\n  React.useLayoutEffect(() => {\r\n    dispatch(getList(pageNumber));\r\n  }, [dispatch, pageNumber]);\r\n\r\n  const target = React.useRef(null);\r\n\r\n  const {list, loading} = useSelector(state => state.shopping);\r\n  \r\n  React.useLayoutEffect(() => {\r\n    let observer;\r\n    if(target.current) {\r\n      const lastPage = 6;\r\n      observer = new IntersectionObserver(([{isIntersecting}]) => {\r\n        // 관찰 대상이 루트 요소와 교차 상태로 들어갔으면, 페이지를 증가시킨다(lastPage 이하까지)\r\n        if(isIntersecting) \r\n          setPageNumber((prevPageNumber) => prevPageNumber < lastPage ? prevPageNumber + 1 : prevPageNumber);\r\n      });\r\n      observer.observe(target.current);\r\n    }\r\n    // 컴포넌트가 언마운트될때, 옵저버 객체가 존재하면 관찰 중지.\r\n    return () => observer && observer.disconnect();\r\n  }, [target]);\r\n\r\n  return {\r\n    list, loading,\r\n    target\r\n  }\r\n} \r\n\r\nconst ListContainer = () => {\r\n  /* \r\n    장바구니에 상품이 담기는 과정을 서버로 보내지 않고 로컬에서 처리한다고 하면,\r\n    LocalStorage를 이용하여 장바구니 처리를 하고,\r\n    Header 쪽에서의 장바구니 Counting은 Redux로 처리한다.\r\n  */\r\n  const dispatch = useDispatch();\r\n\r\n  const clickAddingProductShoppingCart = React.useCallback((product) => {\r\n    const copied = {...product}; // 객체 안에 call by Reference 되는 값이 없으니 Shallow Copy.\r\n    const id = copied.id;\r\n    delete copied.id;\r\n    const getItem = localStorage.getItem(id);\r\n\r\n    // 기존 localStorage에 상품이 있다면, 상품의 개수만 +1 처리한다.\r\n    copied.count = getItem ? JSON.parse(getItem).count + 1 : 1;\r\n    copied.selected = false;\r\n    localStorage.setItem(id, JSON.stringify(copied));\r\n    const length = localStorage.length;\r\n    dispatch(countingCart(length));\r\n\r\n    alert('장바구니에 상품이 추가되었습니다.');\r\n  }, [dispatch]);\r\n  \r\n  const {list, loading, target} = FetchMoreList(dispatch);\r\n\r\n  return (\r\n    <List\r\n      data={list || []} loading={loading} fetchMoreRef={target}\r\n      clickAddingProductShoppingCart={clickAddingProductShoppingCart}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ListContainer;","import React from 'react';\r\nimport styles from './Feature.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cn = classNames.bind(styles);\r\n\r\nconst Item = ({\r\n  prev, cur, next, currentFeatrue, imageUrl\r\n}) => {\r\n  return (\r\n    <img \r\n      className={cn(\r\n        'feature__products__image',\r\n        prev === currentFeatrue && \"prev\",\r\n        cur === currentFeatrue && \"active\",\r\n        next === currentFeatrue && \"next\",\r\n      )} \r\n      src={`https://image.wingeat.com/${imageUrl}`}\r\n      alt=\"product-img\"/>\r\n  );\r\n}\r\n\r\nconst Feature = ({\r\n  data, currentFeatrue, isMobile,\r\n  clickMoveFeatureImage\r\n}) => {\r\n  return (\r\n    <div className={cn('feature')}>\r\n      <div className={cn('feature__products')}>\r\n        <div className={cn('feature__products__images-wrapper')}>\r\n          <div className={cn('feature__products__slider')}>\r\n            {isMobile \r\n            ? <div className={cn('feature__products__slider__number')}>{`${currentFeatrue}/${data.length}`}</div>\r\n            : Array(data.length).fill(0).map((_,i) => \r\n              <div className={cn('feature__products__slider__dot', i+1 === currentFeatrue && \"active\")} key={i} onClick={() => clickMoveFeatureImage(i+1)}></div>)\r\n            }\r\n          </div>\r\n          <div className={cn('feature__products__images')}>\r\n            {data.map((element,i) => {\r\n                const length = data.length;\r\n                const index = i+1;\r\n                return <Item key={i} \r\n                  currentFeatrue={currentFeatrue}\r\n                  prev={index === length ? 1 : index + 1} \r\n                  cur={index} \r\n                  next={(index === 1 ? length : index - 1)}\r\n                  imageUrl={element.image}\r\n                />\r\n              }\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feature;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Feature from '../components/feature/Feature';\r\nimport { getFeature } from '../redux/modules/shopping';\r\n\r\n/* \r\n  Feature 데이터를 서버로부터 가져온다.\r\n*/\r\nconst FetchFeatureData = () => {\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getFeature());\r\n  }, [dispatch]);\r\n\r\n  const feature = useSelector(state => state.shopping.feature);\r\n\r\n  return {\r\n    feature\r\n  };\r\n};\r\n\r\n/* \r\n  Carousel 방식의 Slider 구현.\r\n  - autoPlay(true) && isMoving(true) 조건에 맞아, setTimeout 함수가 실행된다.\r\n    1) 3000ms 시간이 흐른 후, 현재 사진의 인덱스를 나타내는 변수의 상태를 +1 더해서 변화시킨다.\r\n      (변수의 상태를 변화시켰기 때문에, 3초후에 useEffect의 deps로 들어간 변수가 변화하여 다시 실행한다. 즉, 조건이 충족되는 한 3초마다 함수가 실행된다.)\r\n    2) 움직이는지 확인하는 변수(isMoving)의 상태를 false로 변화시킨다.\r\n      - 변화를 감지하고, useEffect에서 다시 true로 상태를 변화.\r\n      - 순서대로 넘어가고, setTimeout 함수가 연달아 호출되어 몇 개씩 넘어가버리지 않게 트리거 역할을 한다.\r\n*/\r\nconst SliderFeature = () => {\r\n  // Slider AutoPlay \r\n  const [autoPlay, setAutoPlay] = React.useState(true);\r\n  const [isMoving, setIsMoving] = React.useState(true);\r\n  const [currentFeatrue, setCurrentFeature] = React.useState(1);\r\n\r\n  React.useLayoutEffect(() => {\r\n    setIsMoving(() => true)\r\n  }, [isMoving]);\r\n\r\n  React.useLayoutEffect(() => {\r\n    let id;\r\n    if(autoPlay && isMoving) {\r\n      id = setTimeout(() => {\r\n        setCurrentFeature((prevIndex) => prevIndex + 1 > 5 ? 1 : prevIndex + 1);\r\n        setIsMoving(() => false);\r\n       }, 3000);\r\n    }\r\n    // 컴포넌트 언마운트 => setTimeout 함수 clear\r\n    return () => {\r\n      clearTimeout(id);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [autoPlay, currentFeatrue]);\r\n\r\n  // mobile 전환 시, 슬라이더에 dot에서 number로 전환.\r\n  // resize 이벤트에 소모되는 값을 줄이고자 setTimeout을 통해서 실행.\r\n  const [isMobile, setIsMobile] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const handleResize = () => {\r\n      let timer;\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        setIsMobile(window.innerWidth < 700 ? true : false);\r\n      }, 100);\r\n    }\r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    }\r\n  }, []);\r\n\r\n  // Dot을 클릭하면, 위치에 따른 이미지 표시\r\n  const clickMoveFeatureImage = React.useCallback((index) => {\r\n    setCurrentFeature(() => index);\r\n  }, []);\r\n\r\n  return {\r\n    currentFeatrue, isMobile,\r\n    clickMoveFeatureImage, setAutoPlay\r\n  }\r\n}\r\n\r\nconst FeatureContainer = () => {\r\n  const {feature} = FetchFeatureData();\r\n  const {currentFeatrue, clickMoveFeatureImage, isMobile} = SliderFeature();\r\n\r\n  return (\r\n    <Feature \r\n      data={feature || []} currentFeatrue={currentFeatrue} isMobile={isMobile}\r\n      clickMoveFeatureImage={clickMoveFeatureImage}/>\r\n  );\r\n}\r\n\r\nexport default FeatureContainer;","import React from 'react';\r\nimport HeaderContainer from '../container/HeaderContainer';\r\nimport ListContainer from '../container/ListContainer';\r\nimport FeatureContainer from '../container/FeatureContainer';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <HeaderContainer />\r\n      <FeatureContainer />\r\n      <ListContainer />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport styles from './Cart.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cn = classNames.bind(styles);\r\n\r\nconst Item = ({\r\n  product, \r\n  toggleProductPayment, clickRemoveProductCart, handleCountingProduct\r\n}) => {\r\n  return (\r\n    <div className={cn('cart__product')}>\r\n      {/* PRODUCT HEADER */}\r\n      <div className={cn('cart__product__header')}>\r\n        <div className={cn('cart__product__header__info')}>\r\n          <input type=\"checkbox\" checked={product.selected} onChange={() => toggleProductPayment(product.id)}/>\r\n          {product.itemName}\r\n        </div>\r\n        <div className={cn('cart__product__header__remove')}>\r\n          <button onClick={() => clickRemoveProductCart(product.id)}>X</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* PRODUCT BODY */}\r\n      <div className={cn('cart__product__body')}>\r\n        <div className={cn('cart__product__body__image')}>\r\n          <img src={`https://image.wingeat.com/${product.image}`} alt=\"img\" />\r\n        </div>\r\n        <div className={cn('cart__product__body__info')}>\r\n          <div className={cn('cart__product__body__price')}>\r\n            {product.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}원\r\n          </div>\r\n          <div className={cn('cart__product__body__count')} onClick={(e) => handleCountingProduct(e, product.id)}>\r\n            <button data-value=\"-1\">-</button>\r\n            <div className={cn('cart__product__body__display__count')}>{product.count}</div>\r\n            <button data-value=\"+1\">+</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* PRODUCT FOOTER */}\r\n      <div className={cn('cart__product__footer')}>\r\n        <p>합계: {(product.price * product.count).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}원</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Cart = ({\r\n  data, paymentPrice,\r\n  clickRemoveProductCart, toggleProductPayment, handleCountingProduct\r\n}) => {\r\n  return (\r\n    <div className={cn('cart')}>\r\n      <div className={cn('cart__subject')}>장바구니</div>\r\n      <div className={cn('cart__product-list-wrapper')}>\r\n        <div className={cn('cart__product-list')}>\r\n          {data.length \r\n            ? data.map((product,i) => \r\n                <Item key={i} product={product} toggleProductPayment={toggleProductPayment} clickRemoveProductCart={clickRemoveProductCart} handleCountingProduct={handleCountingProduct}/>  \r\n              )\r\n            : <div className={cn('cart__product-list__not-found')}>장바구니에 담긴 상품이 없음</div>\r\n          } \r\n        </div>\r\n\r\n        <div className={cn('cart__product-list__sum-account')}>\r\n          <div className={cn('cart__product-list__display-account')}>\r\n            <span>결제 예정 금액</span>\r\n            <span className={cn('cart__product-list__payment-account')}>{paymentPrice.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}원</span>\r\n          </div>\r\n          <div className={cn('cart__product-list__payment')}>\r\n            <button>주문하기</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\nimport Cart from '../components/cart/Cart';\r\n\r\nconst CartContainer = () => {\r\n  const [data, setData] = React.useState(null);\r\n  const [paymentPrice, setPaymentPrice] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    ((localStorage) => {\r\n      const result = [];\r\n      for(const key of Object.keys(localStorage)) {\r\n        const item = localStorage.getItem(key);\r\n        if(item) {\r\n          const obj = Object.assign(JSON.parse(item), {\r\n            id: key,\r\n          });\r\n          result.push(obj);\r\n        }\r\n      }\r\n      setData(() => result);\r\n    })(localStorage);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if(data) {\r\n      setPaymentPrice(() => \r\n        data.reduce((sum,item) => \r\n          item.selected ? sum+(item.count * item.price) : sum\r\n        , 0)\r\n      );\r\n    }\r\n  }, [data]);\r\n\r\n  // 장바구니에서 제품 삭제하는 함수.\r\n  const clickRemoveProductCart = React.useCallback((id) => {\r\n    localStorage.removeItem(id);\r\n    setData(() => data.filter(item => item.id !== id));\r\n  }, [data]);\r\n  \r\n  // 결제할 제품을 선택하는 함수.\r\n  const toggleProductPayment = React.useCallback((id) => {\r\n    setData(() => \r\n      data.map(item => item.id === id ? {...item, selected: !item.selected} : {...item})\r\n    )\r\n    const item = JSON.parse(localStorage.getItem(id));\r\n    item.selected = !item.selected;\r\n    localStorage.setItem(id, JSON.stringify(item));\r\n  }, [data]);\r\n\r\n  // 제품의 수량을 증가 / 감소 시키는 함수.\r\n  const handleCountingProduct = React.useCallback((e, id) => {\r\n    const number = Number(e.target.dataset.value);\r\n    if(number) {\r\n      setData(() => \r\n        data.map(item => item.id === id \r\n          ? {...item, count: item.count + number > 0 ? item.count + number : 1} \r\n          : {...item})\r\n      )\r\n      const item = JSON.parse(localStorage.getItem(id));\r\n      const count = Number(item.count) + number;\r\n      item.count = count > 0 ? count : 1;\r\n      localStorage.setItem(id, JSON.stringify(item));\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Cart \r\n    data={data || []} paymentPrice={paymentPrice}\r\n    clickRemoveProductCart={clickRemoveProductCart} toggleProductPayment={toggleProductPayment} \r\n    handleCountingProduct={handleCountingProduct}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CartContainer;","import React from 'react';\r\nimport CartContainer from '../container/CartContainer';\r\n\r\nconst CartPage = () => {\r\n  return (\r\n    <CartContainer />\r\n  );\r\n}\r\n\r\nexport default CartPage;","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport shopping from './shopping';\r\n\r\nconst rootReducer = (history) =>\r\n  combineReducers({\r\n    shopping,\r\n    router: connectRouter(history),\r\n  });\r\n\r\nexport default rootReducer;","import { all } from 'redux-saga/effects';\r\nimport {sagas as ShoppingSagas} from './shopping';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    ShoppingSagas(),\r\n  ]);\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { createHashHistory } from \"history\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport rootReducer from \"./modules/rootReducer\";\r\nimport rootSaga from \"./modules/rootSaga\";\r\n\r\nexport const history = createHashHistory();\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst create = () => {\r\n  const store = createStore(\r\n    rootReducer(history),\r\n    applyMiddleware(routerMiddleware(history), sagaMiddleware)\r\n  );\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\nexport default create;\r\n","import React from \"react\";\r\nimport { Route, Router, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport HomePage from \"./pages/HomePage\";\r\nimport CartPage from \"./pages/CartPage\";\r\nimport create from \"./redux/create\";\r\nimport { history } from \"./redux/create\";\r\nimport \"./style/base.scss\";\r\n\r\nconst store = create();\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path=\"/cart\" component={CartPage} />\r\n          <Route exact path=\"/\" component={HomePage} />\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}